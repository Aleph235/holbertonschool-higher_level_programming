====================
-add_integer module-
====================

-Import=
========
    >>> add_integer = __import__('0-add_integer').add_integer


-Function Description-
======================
Write a function that adds a and b where a and b are integers or floats,
the result must be an integer.
b has a default value as 98.


-Operation-
===========
‘a’ and ‘b’ must be integers or floats, otherwise raise a TypeError exception
with the message 'a must be an integer' or 'b must be an integer'.

-Tests-
=======

Test case #0: Testing two negative ints

	>>> add_integer(1, 1)
    	2
	>>> add_integer(1, -1)
	0
	>>> add_integer(-1, -1)
	-2
	>>> add_integer(-1, 1)
	0
	>>> add_integer(3.8, 3.9)
	6
	>>> add_integer(0)
	98
	>>> add_integer(1e10000, 2)
	Traceback (most recent call last):
		a = int(a)
	OverflowError: cannot convert float infinity to integer
	>>> add_integer("a","B")
	Traceback (most recent call last):
		raise TypeError("a must be an interger")
	TypeError: a must be an interger
	>>> add_integer(5, 'b')
	Traceback (most recent call last):
		raise TypeError("b must be an interger")
	TypeError: b must be an interger
	>>> add_interger(q, 4)
	Traceback (most recent call last):
	NameError: name 'q' is not defined		

